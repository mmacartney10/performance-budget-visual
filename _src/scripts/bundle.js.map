{"version":3,"sources":["gulpfile.js","karma.conf.js","website.js","_config/itcss.js","_config/paths.js","_config/templateHelpers.js","gulpTasks/clean.js","gulpTasks/compile-html.js","gulpTasks/copy-assets.js","gulpTasks/image-minify.js","gulpTasks/local-testing.js","gulpTasks/new-component.js","gulpTasks/release.js","gulpTasks/scripts.js","gulpTasks/sprites.js","gulpTasks/styles.js","helpers/jsonMerge.js","models/blog.js","models/jobs.js","models/staticContent.js","performance-budget/performanceBudget.js","routes/blog-article.js","routes/blog.js","routes/jobs-article.js","routes/jobs.js","routes/main.js","routes/redirects.js","routes/sitemap.js","routes/styleguide.js","test/websiteSpec.js","utils/common.js","utils/expiry-headers.js","utils/get-api-data.js","utils/refresh-api-data.js","utils/strip-slash.js","test-website/test/apiRequestSpec.js","_source/scripts/src/app.js","_source/scripts/vendor/test.js"],"names":[],"mappingsxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChztEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpdA","file":"bundle.js","sourcesContent":["/* ============================================================ *\\\n    SETUP\n\\* ============================================================ */\n\n'use strict';\n\n// Gulp\nvar gulp = require('gulp');\nvar argv = require('yargs').argv;\nvar runSeq = require('run-sequence');\n\n// Config\nvar config = require('./_config/project.json');\nvar creds = require('./_config/creds.json');\n\nconfig.paths = require('./_config/paths')(config);\n\n/* ============================================================ *\\\n    TASK MODULES\n\\* ============================================================ */\n\nrequire('./gulpTasks/styles.js')(gulp, config, argv);\nrequire('./gulpTasks/scripts.js')(gulp, config, argv);\nrequire('./gulpTasks/sprites.js')(gulp, config);\nrequire('./gulpTasks/image-minify.js')(gulp, config, argv);\nrequire('./gulpTasks/copy-assets.js')(gulp, config);\nrequire('./gulpTasks/clean.js')(gulp);\n// require('./gulpTasks/release.js')(gulp, creds);\n// require('./gulpTasks/compile-html.js')(gulp);\nrequire('./gulpTasks/local-testing.js')(gulp, config);\nrequire('./gulpTasks/new-component.js')(gulp, argv);\n\n/* ============================================================ *\\\n\tMAIN TASKS\n\\* ============================================================ */\n\ngulp.task('watch:sass', function () {\n  if (!argv.prod) {\n    gulp.watch(\n      [config.paths.src.styles + '/**/*.scss', config.paths.src.components + '/**/*.scss'],\n      ['sass']\n    );\n  }\n});\n\ngulp.task('watch:js', function () {\n  if (!argv.prod) {\n    gulp.watch(\n      [config.paths.src.scripts + '/**/*.js', config.paths.src.components + '/**/*.js'],\n      ['scripts']\n    );\n  }\n});\n\ngulp.task('watch:sprites', function () {\n  if (!argv.prod) {\n    gulp.watch(\n      [config.paths.src.images + '/svgs/*.svg'],\n      ['sprites']\n    );\n  }\n});\n\ngulp.task('component', function (cb) {\n  runSeq(['new-component'], cb);\n})\n\ngulp.task('watch', function (cb) {\n  runSeq(['watch:sass', 'watch:js', 'watch:sprites'], cb);\n});\n\ngulp.task('serve', function (cb) {\n  runSeq(['localServer'], cb);\n});\n\n// gulp.task('build', function (cb) {\n// \trunSeq(['default'], ['copy'], ['compile-html'],  cb);\n// });\n\n// gulp.task('release', function (cb) {\n// \trunSeq(['build'], ['package-release'],  cb);\n// });\n\ngulp.task('dev', function (cb) {\n  runSeq(['default'], ['watch'], ['serve'], cb);\n});\n\ngulp.task('default', function (cb) {\n  runSeq(['clean'], ['sass-generate-contents', 'copy:xml'], ['sass', 'scripts', 'scripts:vendor', 'scripts:ie', 'copy:fonts', 'imagemin'], ['sass:legacy:ie8'], cb);\n});\n","// Karma configuration\nmodule.exports = function(config) {\n\n    var configObj = {\n\n        //Karma jQuery\n        //https://github.com/scf2k/karma-jquery\n\n        // base path that will be used to resolve all patterns (eg. files, exclude)\n        basePath: '',\n\n\n        // frameworks to use\n        // available frameworks: https://npmjs.org/browse/keyword/karma-adapter\n        frameworks: ['mocha', 'chai'],\n\n\n        // list of files / patterns to load in the browser\n        files: [\n            'test/*Spec.js',\n            '_source/scripts/**/*.js'\n        ],\n\n\n        // list of files to exclude\n        exclude: [\n        ],\n\n\n        // preprocess matching files before serving them to the browser\n        // available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor\n        preprocessors: {\n        },\n\n\n        // test results reporter to use\n        // possible values: 'dots', 'progress'\n        // available reporters: https://npmjs.org/browse/keyword/karma-reporter\n        // reporters: ['progress'],\n        reporters: ['mocha'],\n\n\n        // web server port\n        port: 9876,\n\n\n        // enable / disable colors in the output (reporters and logs)\n        colors: true,\n\n\n        // level of logging\n        // possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG\n        logLevel: config.LOG_INFO,\n\n\n        // enable / disable watching file and executing tests whenever any file changes\n        autoWatch: false,\n\n\n        // start these browsers\n        // available browser launchers: https://npmjs.org/browse/keyword/karma-launcher\n        //\n        // IE, Chrome, SlimerJS, PhantomJS, TrifleJS, BrowserStack\n        browsers: ['PhantomJS'],\n\n\n        // Continuous Integration mode\n        // if true, Karma captures browsers, runs the tests and exits\n        singleRun: true\n    };\n\n\n    config.set(configObj);\n};\n","var express = require('express'),\n\twebsite = express(),\n\thttp = require('http').Server(website),\n\tpath = require('path'),\n\tlogger = require('express-logger'),\n\tjson = require('express-json'),\n\tbodyParser = require('body-parser'),\n\texpressSession = require('express-session'),\n\tmethodOverride = require('express-method-override'),\n\texphbs = require('express-handlebars'),\n\tchalk = require('chalk'),\n\tcompression = require('compression');\n\nvar publicDir = path.join(__dirname, 'public');\n\nwebsite.engine('hbs', exphbs({\n\textname:'hbs',\n\tdefaultLayout:'index.hbs',\n\tpartialsDir: ['views/_partials']\n}));\n\nwebsite.enable('strict routing');\nwebsite.set('port', process.env.PORT || 3001);\nwebsite.set('views', path.join(__dirname, 'views'));\nwebsite.set('sassColors', path.resolve(__dirname, '_source/styles/_settings/_settings.colors.scss'));\nwebsite.set('folderStructure', path.resolve(__dirname, '_config/project.json'));\nwebsite.set('templateHelpers', require(path.resolve(__dirname, '_config/templateHelpers.js'))());\nwebsite.set('templateData', 'https://rawgit.com/code-computerlove/website-modern-industrial/master/content.json');\nwebsite.set('localJson', '{\"blog\": \"api-feed-blog-list\",\"jobs\":\"api-feed-jobs-list\",\"content\":\"content\"}');\nwebsite.set('apiConfig', path.resolve(__dirname, '_config/apiConfig.json'));\nwebsite.set('view engine', 'hbs');\nwebsite.set('locale', 'en-gb');\nwebsite.use(logger({path: './logs/logfile.txt'}));\nwebsite.use(expressSession({secret: '18dhN7skw9AY82jb',\n                 saveUninitialized: true,\n                 resave: true}));\nwebsite.use(json());\nwebsite.use(bodyParser.urlencoded({ extended: false }));\nwebsite.use(methodOverride());\nwebsite.use(require('./utils/expiry-headers'));\nwebsite.use(compression());\nwebsite.use(express.static(publicDir));\nwebsite.use(require('./utils/strip-slash'));\n\n\n\nfunction shouldCompress(req, res) {\n  if (req.headers['x-no-compression']) {\n    // don't compress responses with this request header\n    return false;\n  }\n  // fallback to standard filter function\n  return compression.filter(req, res);\n}\n\n// 301 Redirects\nrequire('./routes/redirects')(website);\n\n// Setup routing\nrequire('./routes/styleguide')(website);\nrequire('./routes/blog')(website);\nrequire('./routes/blog-article')(website);\nrequire('./routes/jobs')(website);\nrequire('./routes/jobs-article')(website);\nrequire('./routes/sitemap')(website);\nrequire('./routes/main')(website);\n\n// performance-budget//\nrequire('./performance-budget/performanceBudget')();\n// performance-budget//\n\nhttp.listen(website.get('port'), function(){\n\tconsole.log('Website ready, listening on port: ' + website.get('port'));\n});\n\nhttp.on('error', function(err) {\n\n\tconsole.error('');\n\tconsole.error(chalk.inverse('SERVER ERROR'))\n\tconsole.error(chalk.inverse('Error code: %s'), err.code);\n\n\tif(err.code === 'EADDRINUSE'){\n\t\tconsole.error('>> It looks like port ' + chalk.underline(website.get('port')) + ' is being used by another process. The port can only be used by ' + chalk.underline('one') + ' process.');\n\t}\n\n\tconsole.error('>> ' + chalk.underline('Full Error'), err);\n\tconsole.error('');\n})\n\nmodule.exports = website;\n","(function () {\n  'use strict';\n\n\tmodule.exports = function(){\n\t\t\n\t\t\tvar config = require('./project.json');\n\t\t\tvar srcStyles = config.src + '/' + config.dirs.styles;\n\n\t\t\treturn [\n\t\t\t\tsrcStyles + '/_settings/*.scss', \n\t\t\t\t'!' + srcStyles + '/_settings/_settings.old-ie-8.scss', \n\t\t\t\tsrcStyles + '/_tools/_tools.mixins.scss', \n\t\t\t\tsrcStyles + '/_tools/_tools.functions.scss', \n\t\t\t\tsrcStyles + '/_tools/*.scss', \n\t\t\t\tsrcStyles + '/_scope/*.scss', \n\t\t\t\tsrcStyles + '/_generic/*.scss', \n\t\t\t\tsrcStyles + '/_elements/*.scss', \n\t\t\t\tsrcStyles + '/_objects/*.scss',\n\t\t\t\tsrcStyles + '/_components/*.scss',\n\t\t\t\t'views/_partials/**/*.scss', \n\t\t\t\tsrcStyles + '/_trumps/*.scss'\n\t\t\t];\n\t\t\n\t};\n}());","'use strict';\n\nfunction getConfig(paths) {\n\tvar _DIR = '/';\n\n\tvar config =  {\n\t\tsrc: {\n\t\t\tcomponents: paths.dirs.components + _DIR,\n\t\t\tfonts:      paths.src + _DIR + paths.dirs.fonts + _DIR,\n\t\t\timages:     paths.src + _DIR + paths.dirs.images + _DIR,\n\t\t\tscripts:    paths.src + _DIR + paths.dirs.scripts + _DIR,\n\t\t\tstyles:     paths.src + _DIR + paths.dirs.styles + _DIR\n\t\t},\n\t\tdest: {\n\t\t\tfonts:   paths.dest + _DIR + paths.dirs.fonts + _DIR,\n\t\t\timages:  paths.dest + _DIR + paths.dirs.images + _DIR,\n\t\t\tscripts: paths.dest + _DIR + paths.dirs.scripts + _DIR,\n\t\t\tstyles:  paths.dest + _DIR + paths.dirs.styles + _DIR\n\t\t}\n\t};\n\n\treturn config;\n}\n\nmodule.exports = getConfig;","(function () {\n  'use strict';\n  module.exports = function() {\n\n    /**\n     * Set of handlebar helpers that can be used in templates\n     */\n\n    return {\n        /**\n         * Get the string value of a JSON object, useful for debugging template data\n         *\n         * @param  {Object} obj JSON object\n         * @return {String}     Provided object as a string\n         *\n         * @example\n         * {{ json data }}\n         */\n        json: function(obj) {\n            return JSON.stringify(obj);\n        },\n\n        /**\n         * pass in multiple modifiers (BEM) to be used in partials\n         *\n         * @param  {modifierList} comma separated string\n         * @return {modifier}     start of CSS class\n         *\n         * @example temaplate\n         * {{>myPartial modifier=\"mod1,mod2\" }}\n         *\n         * @example partial\n         * {{ modifierArray modifier 'my-element-class'}}\n         */\n\n        modifierArray: function(modifierList, prefix){\n            var arr = modifierList.split(',');\n            var modifierStr = '';\n            for(var i = 0; i < arr.length; i++){\n                modifierStr += prefix + '--' + arr[i] + ' ';\n            }\n\n            return modifierStr;\n        },\n        \n        /**\n         * Helper that repeats blocks of code, providing an index to be utilised\n         *\n         * @param  {Bool} \tn           Number of times to repeat a code block\n         * @param  {Obj} \toptions\n         * @return {String}             HTML string of content to be put into template\n         *\n         * @example\n         * {{#repeat 4}} <h{{@index}}>Hello, World!</h{{@index}}> {{/repeat}}\n         */\n    \trepeat: function (n, options) {\n         \tvar content = '',\n         \tcount = n - 1;\n\n         \tfor (var i = 0; i <= count; i++) {\n         \t\tvar data = {\n         \t\t\tindex: i + 1\n         \t\t};\n         \t\tcontent += options.fn(this, {data: data});\n         \t}\n\n         \treturn content;\n         }\n    };\n  };\n}());\n","/* ============================================================ *\\\n  Clean build folders\n\\* ============================================================ */\n\nvar del = require('del')\n\nmodule.exports = function (gulp) {\n  gulp.task('clean', function () {\n    return del([\n      './public/',\n      './build/'\n    ])\n  })\n}\n","/* ============================================================ *\\\n    COMPILE TEMPLATES / HTML\n\\* ============================================================ */\n\nvar rename = require('gulp-rename');\nvar handlebars = require('gulp-compile-handlebars');\n\nvar handlebarsConfig = require('../_config/handlebars.json');\nvar templateDataJson = require('../_config/templateData.json');\nvar templateHelpers = require('../_config/templateHelpers.js')();\n\nmodule.exports = function(gulp) {\n\n    gulp.task('compile-html', function () {\n        var templateData = {\n            data: templateDataJson\n        },\n\n        options = {\n            batch : handlebarsConfig.partials,\n            helpers: templateHelpers\n        }\n        \n        return gulp.src(handlebarsConfig.views)\n            .pipe(handlebars(templateData, options))\n            .pipe(rename({extname: '.html'}))\n            .pipe(gulp.dest('build'));\n    });\n\n}","/* ============================================================ *\\\n    MOVE / Copy files\n\\* ============================================================ */\n\nmodule.exports = function(gulp, config) {\n    gulp.task('copy:fonts', function(){\n        return gulp.src([config.paths.src.fonts + '**/*'])\n        .pipe(gulp.dest(config.paths.dest.fonts));\n    })\n\n    gulp.task('copy', function(){\n        return gulp.src(['!' + config.paths.dest.styles, '!' + config.paths.dest.styles + '*.map', config.dest + '/**/*'])\n        .pipe(gulp.dest(config.build));\n    })\n\n    gulp.task('copy:xml', function(){\n        return gulp.src([config.src + '/sitemap.xml'])\n        .pipe(gulp.dest(config.dest));\n    })\n\n}","/* ============================================================ *\\\n    IMAGES / minify images\n\\* ============================================================ */\n\nvar gulpif = require('gulp-if');\nvar imagemin = require('gulp-imagemin');\nvar pngquant = require('imagemin-pngquant');\nvar svgmin = require('gulp-svgmin');\n\nmodule.exports = function(gulp, config, argv) {\n    gulp.task('imagemin', function () {\n        return gulp.src(config.paths.src.images + '**/*')\n            .pipe(gulpif(argv.prod, imagemin({\n                progressive: true,\n                svgoPlugins: [{removeViewBox: false}],\n                use: [pngquant()]\n            }))) //Production only\n            .pipe(gulp.dest(config.paths.dest.images));\n    });\n\n    gulp.task('svgmin', function () {\n        return gulp.src(config.paths.src.images + '**/*.svg')\n            .pipe(svgmin({\n                plugins: [{\n                    removeDimensions: true\n                }, {\n                    removeTitle: true\n                }]\n            }))\n            .pipe(gulp.dest(config.paths.dest.images));\n    });\n}","/* ============================================================ *\\\n    LOCAL TESTING\n\\* ============================================================ */\n\nvar browserSync = require('browser-sync');\nvar nodemon = require('gulp-nodemon');\n\nmodule.exports = function(gulp, config) {\n\n    gulp.task('browser-sync', function() {\n        browserSync.init(null, {\n            proxy: \"http://localhost:3001\",\n            files: [config.dest + '/' +  '**/*.*'],\n            browser: \"google chrome\",\n            port: 7000,\n            ui: {\n                port: 7001\n            }\n        }, function browserSyncCallback() {\n            console.log('browser-sync ready, listening on port: 7000')\n        });\n    });\n\n\n    gulp.task('localServer', function(cb) {\n\n        var started = false;\n\n        //Reload website.js if templateData file changes (among other files)\n        return nodemon({\n            script: 'website.js',\n            ext: 'js json'\n        }).on('start', function() {\n            if (!started) {\n                cb();\n                started = true;\n            }\n        });\n    });\n\n}","var fs = require('fs');\nvar path = require('path');\nvar chalk = require('chalk');\n\nvar viewsPath = path.join(process.cwd(), 'views')\nvar partialsPath = path.join(viewsPath, '_partials');\n\nvar componentPath;\nvar hbsFileName;\nvar scssFileName;\n\nmodule.exports = function(gulp, argv) {\n\n    gulp.task('new-component', function (cb) {\n\n        if(!argv.name) {\n            noNameGivenOutput();\n        } else {\n            createComponentAssets();\n        }\n\n        cb();\n\n    });\n\n    function noNameGivenOutput() {\n        console.log('');\n        console.log('A component must have a name');\n        console.log('');\n        console.log('Example usage:')\n        console.log('gulp component --name header');\n        console.log('');\n    }\n\n    function createComponentAssets() {\n        hbsFileName = argv.name + '.hbs';\n        scssFileName = argv.name + '.scss';\n        componentPath = path.join(partialsPath, argv.name);\n\n        fs.mkdirSync(componentPath);\n        console.log('');\n        console.log(chalk.green('✓ Folder \"%s\" created'), argv.name);\n\n        fs.writeFileSync(path.join(componentPath, hbsFileName), '<h1>' + argv.name +'</h1>', 'utf8');\n        console.log(chalk.green('✓ Handlebars file \"%s\" created'), hbsFileName);\n\n        fs.writeFileSync(path.join(componentPath, scssFileName), '//' + argv.name + ' styles', 'utf8');\n        console.log(chalk.green('✓ Sass file \"%s\" created'), scssFileName);\n        console.log('')\n        console.log(chalk.bold('Component files created in \"%s\"'), componentPath);\n        console.log('')\n    }\n\n}","/* ============================================================ *\\\n\tPACKAGE THE FOLDER UP\n\\* ============================================================ */\n\nvar zip = require('gulp-zip');\nvar del = require('del');\n\nmodule.exports = function(gulp, creds) {\n\n\tgulp.task('clean', function () {\n\t\treturn del([\n\t\t\t'./public/',\n\t\t\t'./build/'\n\t\t]);\n\t});\n\n\tgulp.task('package-release', function () {\n\n\t\tvar d = new Date();\n\t\tvar packageName = creds.packageName + '' + d.getDay() + '.' + d.getMonth() + '.' + d.getFullYear() + '_' + d.getHours() + '.' + d.getMinutes();\n\n\t\treturn gulp.src('build/**/*')\n\t\t\t.pipe(zip(packageName + '.zip'))\n\t\t\t.pipe(gulp.dest('release'));\n\t});\n\n}","'use strict';\n\n/* ============================================================ *\\\n    SCRIPTS JS / lint, concat and minify scripts\n\\* ============================================================ */\n\n// Gulp dependencies\nvar sourcemaps   = require('gulp-sourcemaps');\nvar gulpif       = require('gulp-if')\nvar concat       = require('gulp-concat');\n\n// JavaScript dependencies\nvar jshint       = require('gulp-jshint');\nvar uglify       = require('gulp-uglify');\n\n// Config\nvar jshintConfig = require('../_config/jshint.json');\n\nmodule.exports = function(gulp, config, argv) {\n\n    gulp.task('scripts', function(){\n        return gulp.src(['*.js', '**/*.js', '!node_modules/**/*.js', '!test-generator/**/*.js', '!public/**/*.js'])\n            .pipe(jshint(jshintConfig))\n            .pipe(jshint.reporter('default'))\n            //.pipe(jshint.reporter('fail'))\n            .pipe(gulpif(!argv.prod, sourcemaps.init())) //Default only\n            .pipe(concat('bundle.js'))\n            .pipe(gulpif(argv.prod, uglify())) //Production only\n            .pipe(gulpif(!argv.prod, sourcemaps.write('.'))) //Default only\n            .pipe(gulp.dest(config.paths.dest.scripts));\n    });\n\n    gulp.task('scripts:vendor', function(){\n        return gulp.src([config.paths.src.scripts + 'vendor/*.js'])\n            .pipe(gulpif(!argv.prod, jshint(jshintConfig))) //Default only\n            .pipe(gulpif(!argv.prod, sourcemaps.init())) //Default only\n            .pipe(concat('bundle-critical.js'))\n            .pipe(gulpif(argv.prod, uglify())) //Production only\n            .pipe(gulpif(!argv.prod, sourcemaps.write('.'))) //Default only\n            .pipe(gulp.dest(config.paths.dest.scripts));\n    });\n\n    gulp.task('scripts:ie', function(){\n        return gulp.src([config.paths.src.scripts + 'ie/*.js'])\n            .pipe(concat('ie.js'))\n            .pipe(gulpif(argv.prod, uglify())) //Production only\n            .pipe(gulp.dest(config.paths.dest.scripts));\n    });\n\n}","/* ============================================================ *\\\n    SPRITES\n\\* ============================================================ */\n\nvar svgSpritesheet = require('gulp-svg-spritesheet');\nvar svg2png = require('gulp-svg2png');\n\nmodule.exports = function(gulp, config) {\n\n    gulp.task('sprites', function() {\n        return gulp.src(config.paths.src.images + 'svgs/*.svg')\n            .pipe(svgSpritesheet({\n                cssPathNoSvg: '../' + config.dirs.images + '/sprite.png',\n                cssPathSvg:   '../' + config.dirs.images + '/sprite.svg',\n                padding:      5,\n                pixelBase:    config.pixelBaseNoUnit,\n                positioning:  'packed',\n                templateSrc:  config.src + '/svg-sprite-sass.tpl',\n                templateDest: config.paths.src.styles + '_tools/_tools.sprites.scss',\n                units:        'em'\n            }))\n            .pipe(gulp.dest(config.paths.dest.images + 'sprite.svg'))\n            .pipe(svg2png())\n            .pipe(gulp.dest(config.paths.dest.images + 'sprite.png'));\n    });\n\n}","'use strict';\n/* ============================================================ *\\\n    STYLES / SCSS\n\\* ============================================================ */\n\n// Gulp dependencies\nvar sourcemaps      = require('gulp-sourcemaps');\nvar gulpif          = require('gulp-if')\nvar rename          = require('gulp-rename');\n\n// Sass dependencies\nvar sgc             = require('gulp-sass-generate-contents');\nvar sass            = require('gulp-sass');\n\n// CSS dependencies\nvar autoprefixer    = require('autoprefixer');\nvar postcss         = require('gulp-postcss');\n// var pixrem          = require('pixrem');\nvar cssNano         = require('cssnano');\nvar mqPacker        = require('css-mqpacker');\n\nvar pxtorem         = require('postcss-pxtorem');\nvar pxtoremOptions  = require('../_config/pxtorem.json');\n\n// Config\nvar creds           = require('../_config/creds.json');\nvar itcss           = require('../_config/itcss');\n\nvar stylesConfig = {\n  browsers: {\n    normal: ['> 5%', 'Android 3'],\n    ie8: ['IE 8']\n  }\n};\n\nvar pxtoremFile = require('../_config/pxtorem.json');\n\nmodule.exports = function (gulp, config, argv) {\n  var sassConfig = {\n    errLogToConsole: true,\n    includePaths: [config.paths.src.components],\n    outputStyle: 'compact'\n  };\n\n  function getPostCssPlugins (browsers) {\n    var plugins = [\n      autoprefixer({\n        browsers: browsers\n      }),\n      mqPacker({\n        sort: true\n      }),\n      pxtorem(pxtoremOptions)\n    ];\n\n    if (argv.prod) {\n      plugins.push(cssNano());\n    }\n\n    return plugins;\n  }\n\n  function pxToRem () {\n    fs.writeFile(fileName, processedCss, function (err) {\n      if (err) throw err\n      console.log('Rem file written.')\n    })\n  }\n\n  gulp.task('sass-generate-contents', function () {\n    return gulp.src(itcss())\n      .pipe(sgc(config.paths.src.styles + 'main.scss', creds))\n      .pipe(gulp.dest(config.paths.src.styles));\n  });\n\n  gulp.task('sass', ['sprites'], function () {\n    return gulp.src(config.paths.src.styles + 'main.scss')\n      .pipe(gulpif(!argv.prod, sourcemaps.init())) // Default only\n      .pipe(sass(sassConfig))\n      .pipe(postcss(getPostCssPlugins(stylesConfig.browsers.normal)))\n      .pipe(gulpif(!argv.prod, sourcemaps.write('.'))) // Default only\n      .pipe(gulp.dest(config.paths.dest.styles));\n  });\n\n  gulp.task('sass:legacy:ie8', ['sprites'], function () {\n    return gulp.src(config.paths.src.styles + 'ie8.scss')\n      .pipe(sass(sassConfig))\n      .pipe(postcss(getPostCssPlugins(stylesConfig.browsers.ie8)))\n      .pipe(gulp.dest(config.paths.dest.styles));\n  });\n}\n","// Returns merged JSON.\n//\n// Eg.\n// merge( { a: { b: 1, c: 2 } }, { a: { b: 3, d: 4 } } )\n// -> { a: { b: 3, c: 2, d: 4 } }\n//\n// @arguments JSON's\n//\n// Code from: https://github.com/rxaviers/cldr\n// \nmodule.exports = function() {\n    var destination = {},\n        sources = [].slice.call( arguments, 0 );\n    sources.forEach(function( source ) {\n        var prop;\n        for ( prop in source ) {\n            if ( prop in destination && Array.isArray( destination[ prop ] ) ) {\n                \n                // Concat Arrays\n                destination[ prop ] = destination[ prop ].concat( source[ prop ] );\n                \n            } else if ( prop in destination && typeof destination[ prop ] === \"object\" ) {\n                \n                // Merge Objects\n                destination[ prop ] = merge( destination[ prop ], source[ prop ] );\n                \n            } else {\n                \n                // Set new values\n                destination[ prop ] = source[ prop ];\n                \n            }\n        }\n    });\n    return destination;\n};\n\n//console.log(JSON.stringify(merge({ a: { b: 1, c: 2 } }, { a: { b: 3, d: 4 } })));","var getData = require('../utils/get-api-data.js');\n\nvar blog = function (website, apiConfigData) {\n\n\tvar utils = require('../utils/common.js')();\n\tvar apiData = JSON.parse(apiConfigData);\n\n\tthis.getAll = function(){\n\n\t\tvar dataUrl = apiData.env + '/' + apiData.blog.getAllBlogs;\n\t\treturn getData(JSON.parse(website.settings.localJson).blog + '.json', dataUrl);\n\n\t};\n\n\tthis.get = function(pageUrl){\n\n\t\tvar dataUrl = apiData.env + '/' + apiData.blog.getBlogByUrl + '?link=/blog/' + String(pageUrl);\n\t\tvar jsonName = pageUrl.replace(/\\//g, '-');\n\n\t\treturn getData(jsonName + '.json', dataUrl);\n\t};\n\n}\n\nmodule.exports = blog","var getData = require('../utils/get-api-data.js');\n\nvar jobs = function (website, apiConfigData) {\n\n\tvar utils = require('../utils/common.js')();\n\tvar apiData = JSON.parse(apiConfigData);\n\n\tthis.getAll = function(){\n\n\t\tvar dataUrl = apiData.env + '/' + apiData.jobs.getAllJobs;\n\t\treturn getData(JSON.parse(website.settings.localJson).jobs + '.json', dataUrl);\n\n\t};\n\n\tthis.get = function(pageUrl){\n\n\t\tvar dataUrl = apiData.env + '/' + apiData.jobs.getJobByUrl + '?link=/jobs/' + String(pageUrl);\n\t\tvar jsonName = pageUrl.replace(/\\//g, '-');\n\n\t\treturn getData(jsonName + '.json', dataUrl);\n\t};\n\n}\n\nmodule.exports = jobs","var getData = require('../utils/get-api-data.js');\n\nvar staticContent = function (website) {\n\n\tthis.get = function(){\n\n\t\treturn getData(JSON.parse(website.settings.localJson).content +'.json', website.settings.templateData);\n\n\t};\n\n}\n\nmodule.exports = staticContent","module.exports = function () {\n  'use strict'\n\n  var fs = require('fs')\n  var files = {\n    root: __dirname,\n    styles: '/../public/_client/styles/',\n    fonts: '/../public/_client/fonts/',\n    images: '/../public/_client/images/'\n  }\n\n  var styleSize = 0\n  var fontSize = 0\n  var imageSize = 0\n\n  var fileSizeObj = {\n    'styles': [],\n    'fonts': [],\n    'images': []\n  }\n\n  function init () {\n    readDirectory(files.styles, 'styles')\n    readDirectory(files.fonts, 'fonts')\n    readDirectory(files.images, 'images')\n\n    setTimeout(function () {\n      // console.log(fileSizeObj)\n    }, 1000)\n  }\n\n  function readDirectory (filePath, fileType) {\n    fs.readdir(files.root + filePath, function (err, fileName) {\n      if (err) throw err\n      readFileNames(filePath, fileName, fileType)\n    })\n  }\n\n  function readFileNames (filePath, fileName, fileType) {\n    for (var index = 0; index <= fileName.length; index++) {\n      if (fileName[index] === undefined) return\n\n      var isLastItem = false\n      if (index === (fileName.length - 1)) {\n        isLastItem = true\n      }\n\n      getFileSize(filePath, fileName[index], fileType, isLastItem)\n    }\n  }\n\n  function getFileSize (filePath, fileName, fileType, isLastItem) {\n    var stats = fs.statSync(files.root + filePath + fileName)\n    var fileSize = (stats['size']) / 1000\n    var obj = {\n      name: fileName,\n      size: fileSize\n    }\n\n    fileSizeObj[fileType].push(obj)\n\n    if (fileType === 'styles') {\n      styleSize += fileSize\n      if (!isLastItem) return\n      fileSizeObj[fileType].push(styleSize)\n    }\n    if (fileType === 'fonts') {\n      fontSize += fileSize\n      if (!isLastItem) return\n      fileSizeObj[fileType].push(fontSize)\n    }\n    if (fileType === 'images') {\n      imageSize += fileSize\n      if (!isLastItem) return\n      fileSizeObj[fileType].push(imageSize)\n    }\n  }\n\n  init()\n}\n","var path = require('path');\nvar Promise = require('bluebird');\nvar fs = require('fs');\n\nvar blogModel = require('../models/blog.js');\nvar staticContentModel = require('../models/staticContent.js');\n\nPromise.promisifyAll(fs);\n\nvar WebsiteController = function (website) {\n\t// Public functions\n\tvar website = website;\n\tvar utils = require('../utils/common.js')();\n\n\tthis.get = function(request, response) {\n\t\tif (!request.body) return response.sendStatus(400);\n\t\t\n\t\tvar pageUrl = request.params[0];\t\t\n\t\tvar view = 'blog-article';\n\n\t\tapiConfigRequest = utils.getApiData(website.settings.apiConfig);\n\t\tapiConfigRequest.then(function(data){\n\n\t\t\tvar blog = new blogModel(website, data);\n\t\t\tvar content = new staticContentModel(website);\n\t\t\tvar canonicalUrl = utils.getCanonicalUrl(request);\n\t\t\t\n\t\t\tvar fileReqs = [blog.get(pageUrl), content.get()];\n\n\t\t\t//Asynchronous get data\n\t\t\tPromise.all(fileReqs).then(function(data){\n\t\t\t\tfeedData = JSON.parse(String(data[0]));\n\t\t\t\ttemplateData = JSON.parse(String(data[1]));\n\t\t\t\turl = view;\n\n\t\t\t\tresponse.render(url, createModel({\n\t\t\t\t\tfeedData: feedData, \n\t\t\t\t\ttemplateData: templateData,\n\t\t\t\t\tcanonicalUrl : canonicalUrl,\n\t\t\t\t\tarticleUrl : canonicalUrl\n\t\t\t\t}));\n\t\t\t});\n\t\t})\n\t\t.error(function(){\n\t\t\tresponse.redirect('/404');\n\t\t});\n\n\t\treturn;\n\t};\n\n\n\tfunction createModel(params){\n\n\t\tvar data = params.templateData;\n\t\tvar article = params.feedData;\n\t\tvar articleBody = article.Body;\n\t\tvar summary = article.Summary;\n\t\tvar meta = article.Meta;\n\t\tvar articleTitle = summary.Title;\n\t\tvar articleDate = new Date(summary.ArticleDate).toISOString();\n\t\tvar articleDateFormatted = utils.formatDate(summary.ArticleDate);\n\t\tvar articleAuthors = article.Authors;\n\t\tvar thumbnailUrl = article.Thumbnail.ImageUrl;\n\n\t\tvar model = {\n\t\t\tlayout: false,\n\t\t\tsiteTitle: meta.Title || articleTitle,\n\t\t\tsiteDescription: meta.Description,\n\t\t\ttitle: articleTitle,\n\t\t\tbody: articleBody,\n\t\t\tarticleDate: articleDate,\n\t\t\tarticleDateFormatted: articleDateFormatted,\n\t\t\tarticleAuthors: articleAuthors,\n\t\t\tdata: data,\n\t\t\thelpers: website.settings.templateHelpers,\n\t\t\tblogNavigationActive: 'is-active',\n\t\t\tshowOpenGraph: true,\n\t\t\tthumbnailUrl: thumbnailUrl,\n\t\t\tarticleUrl: params.articleUrl,\n\t\t\ttheme: data.blog.theme,\n\t\t\tcanonicalUrl: params.canonicalUrl\n\t\t}\n\n\t\treturn model;\n\t}\n\n};\n\nmodule.exports = function(website) {\n\tvar controller = new WebsiteController(website);\n\twebsite.get('/blog/*', controller.get);\n\n};","var path = require('path');\nvar Promise = require('bluebird');\nvar fs = require('fs');\n\nvar blogModel = require('../models/blog.js');\nvar staticContentModel = require('../models/staticContent.js');\n\nPromise.promisifyAll(fs);\n\nvar WebsiteController = function (website) {\n\t// Public functions\n\tvar utils = require('../utils/common.js')();\n\n\tthis.get = function(request, response) {\n\n\t\tvar url = utils.parseUrl(request.params[0], 'blog');\t\n\n\t\tapiConfigRequest = utils.getApiData(website.settings.apiConfig);\n\t\tapiConfigRequest.then(function(data){\n\t\t\t\n\t\t\tvar blog = new blogModel(website, data);\n\t\t\tvar content = new staticContentModel(website);\n\t\n\t\t\tvar fileReqs = [blog.getAll(), content.get()];\n\t\t\t\n\t\t\t//Asynchronous get data\n\t\t\tPromise.all(fileReqs).then(function(data){\n\t\t\t\tfeedData = JSON.parse(String(data[0]));\n\t\t\t\ttemplateData = JSON.parse(String(data[1]));\n\n\t\t\t\tresponse.render(url, createModel({\n\t\t\t\t\tfeedData: feedData, \n\t\t\t\t\ttemplateData: templateData,\n\t\t\t\t\tcanonicalUrl : utils.getCanonicalUrl(request)\n\t\t\t\t}));\n\t\t\t});\n\t\t})\n\t\t.error(function(){\n\t\t\tresponse.redirect('/404');\n\t\t});\n\n\t};\n\n\n\tfunction createModel(params){\n\n\t\tvar data = params.templateData;\n\t\tvar blogListData = params.feedData;\n\t\tutils.setDates(blogListData, 'ArticleDate');\n\t\t\n\t\tvar firstItem = blogListData.shift();\n\n\t\tvar model = {\n\t\t\tlayout: false,\n\t\t\tsiteTitle: data.blog.metaData.siteTitle,\n\t\t\tsiteDescription: data.blog.metaData.siteDescription,\n\t\t\tapiData: blogListData,\n\t\t\tdata: data,\n\t\t\thelpers: website.settings.templateHelpers,\n\t\t\tblogNavigationActive: 'is-active',\n\t\t\ttheme: data.blog.theme,\n\t\t\tlatestArticle: firstItem,\n\t\t\tcanonicalUrl: params.canonicalUrl\n\t\t}\n\n\t\treturn model;\n\t}\n\n};\n\nmodule.exports = function(website) {\n\tvar controller = new WebsiteController(website);\n\twebsite.get('/blog', controller.get);\n};","var path = require('path');\nvar Promise = require('bluebird');\nvar fs = require('fs');\n\nvar jobsModel = require('../models/jobs.js');\nvar staticContentModel = require('../models/staticContent.js');\n\nPromise.promisifyAll(fs);\n\nvar WebsiteController = function (website) {\n\t// Public functions\n\tvar website = website;\n\tvar utils = require('../utils/common.js')();\n\n\tthis.get = function(request, response) {\n\t\tif (!request.body) return response.sendStatus(400);\n\t\t\n\t\tvar pageUrl = request.params[0];\t\t\n\t\tvar view = 'jobs-article'\n\n\t\tapiConfigRequest = utils.getApiData(website.settings.apiConfig);\n\t\tapiConfigRequest.then(function(data){\n\n\t\t\tvar jobs = new jobsModel(website, data);\n\t\t\tvar content = new staticContentModel(website);\n\t\t\tvar canonicalUrl = utils.getCanonicalUrl(request);\n\t\t\t\n\t\t\tvar fileReqs = [];\n\n\t\t\tvar jsonName = pageUrl.replace(/\\//g, '-');\n\n\t\t\tfileReqs.push(jobs.get(pageUrl), content.get());\n\n\t\t\t//Asynchronous get data\n\t\t\tPromise.all(fileReqs).then(function(data){\n\t\t\t\tfeedData = JSON.parse(String(data[0]));\n\t\t\t\ttemplateData = JSON.parse(String(data[1]));\n\t\t\t\turl = view;\n\n\t\t\t\tresponse.render(url, createModel({\n\t\t\t\t\tfeedData: feedData, \n\t\t\t\t\ttemplateData: templateData,\n\t\t\t\t\tcanonicalUrl : canonicalUrl,\n\t\t\t\t\tarticleUrl : canonicalUrl\n\t\t\t\t}));\n\t\t\t});\n\t\t})\n\t\t.error(function(){\n\t\t\tresponse.redirect('/404');\n\t\t});\n\n\t\treturn;\n\n\t};\n\n\tfunction createModel(params){\n\n\t\tvar data = params.templateData;\n\t\tvar article = params.feedData;\n\t\tvar articleBody = article.Body;\n\t\tvar summary = article.Summary;\n\t\tvar meta = article.Meta;\n\t\tvar articleTitle = summary.Title;\n\t\tvar articleDate = new Date(summary.PublishedDate).toISOString();\n\t\tvar articleDateFormatted = utils.formatDate(summary.PublishedDate);\n\t\tvar articleAuthors = article.Authors;\n\t\tvar emailLink  = 'mailto:' + data.jobs.email + '?subject=' + articleTitle.replace(/\\s/g, '%20');\n\t\t\n\n\t\tvar model = {\n\t\t\tlayout: false,\n\t\t\tsiteTitle: meta.Title || articleTitle,\n\t\t\tsiteDescription: meta.Description,\n\t\t\ttitle: articleTitle,\n\t\t\tbody: articleBody,\n\t\t\tarticleDate: articleDate,\n\t\t\tarticleDateFormatted: articleDateFormatted,\n\t\t\tarticleAuthors: articleAuthors,\n\t\t\tdata: data,\n\t\t\thelpers: website.settings.templateHelpers,\n\t\t\tjobNavigationActive: 'is-active',\n\t\t\temailLink: emailLink,\n\t\t\ttheme: data.jobs.theme,\n\t\t\tcanonicalUrl: params.canonicalUrl\n\t\t}\n\n\t\treturn model;\n\t}\n\n};\n\nmodule.exports = function(website) {\n\tvar controller = new WebsiteController(website);\n\twebsite.get('/jobs/*', controller.get);\n\n};","var path = require('path');\nvar Promise = require('bluebird');\nvar fs = require('fs');\n\nvar jobsModel = require('../models/jobs.js');\nvar staticContentModel = require('../models/staticContent.js');\n\nPromise.promisifyAll(fs);\n\nvar WebsiteController = function (website) {\n\t// Public functions\n\tvar utils = require('../utils/common.js')();\n\n\tthis.get = function(request, response) {\n\t\tvar url = utils.parseUrl(request.params[0], 'jobs');\n\n\t\tapiConfigRequest = utils.getApiData(website.settings.apiConfig);\n\t\tapiConfigRequest.then(function(data){\n\n\t\t\tvar jobs = new jobsModel(website, data);\n\t\t\tvar content = new staticContentModel(website);\n\n\t\t\tvar fileReqs = [jobs.getAll(), content.get()];\n\n\t\t\t//Asynchronous get data\n\t\t\tPromise.all(fileReqs).then(function(data){\n\t\t\t\tfeedData = JSON.parse(String(data[0]));\n\t\t\t\ttemplateData = JSON.parse(String(data[1]));\n\n\t\t\t\tresponse.render(url, createModel({\n\t\t\t\t\tfeedData: feedData, \n\t\t\t\t\ttemplateData: templateData,\n\t\t\t\t\tcanonicalUrl : utils.getCanonicalUrl(request)\n\t\t\t\t}));\n\t\t\t});\n\t\t})\n\t\t.error(function(){\n\t\t\tresponse.redirect('/404');\n\t\t});\n\n\n\t};\n\n\tfunction createModel(params){\n\n\t\tvar data = params.templateData;\n\t\tvar jobsListData = params.feedData;\n\t\tutils.setDates(jobsListData, 'PublishedDate');\n\n\t\tvar model = {\n\t\t\tlayout: false,\n\t\t\tsiteTitle: data.jobs.metaData.siteTitle,\n\t\t\tsiteDescription: data.jobs.metaData.siteDescription,\n\t\t\tapiData: jobsListData,\n\t\t\tdata: data,\n\t\t\thelpers: website.settings.templateHelpers,\n\t\t\tjobNavigationActive: 'is-active',\n\t\t\ttheme: data.jobs.theme,\n\t\t\tcanonicalUrl: params.canonicalUrl\n\t\t}\n\n\t\treturn model;\n\t}\n\n};\n\nmodule.exports = function(website) {\t\n\tvar controller = new WebsiteController(website);\n\twebsite.get('/jobs', controller.get);\n\n};","var path = require('path');\nvar fs = require('fs');\nvar refreshData = require('../utils/refresh-api-data.js');\n\nvar blogModel = require('../models/blog.js');\nvar staticContentModel = require('../models/staticContent.js');\n\nvar WebsiteController = function (website) {\n\t// Public functions\n\tvar utils = require('../utils/common.js')();\n\n\tthis.get = function(request, response) {\n\t\tif (!request.body) return response.sendStatus(400);\n\n\t\tvar url = utils.parseUrl(request.params.loc, 'index');\n\n\t\tapiConfigRequest = utils.getApiData(website.settings.apiConfig);\n\t\tapiConfigRequest.then(function(data){\n\n\t\t\tvar blog = new blogModel(website, data);\n\t\t\tvar content = new staticContentModel(website);\n\n\t\t\tvar fileReqs = [blog.getAll(), content.get()];\n\n\t\t\t//Asynchronous get data\n\t\t\tPromise.all(fileReqs).then(function(data){\n\t\t\t\tfeedData = JSON.parse(String(data[0]));\n\t\t\t\ttemplateData = JSON.parse(String(data[1]));\n\n\t\t\t\tresponse.render(url, createModel({\n\t\t\t\t\tfeedData: feedData, \n\t\t\t\t\ttemplateData: templateData,\n\t\t\t\t\tcanonicalUrl : utils.getCanonicalUrl(request)\n\t\t\t\t}));\n\n\t\t\t\t//update data if requested\n\t\t\t\tvar qs = request.query.publish;\n\t\t\t\tif(qs){\n\t\t\t\t\trefreshData(qs, website);\n\t\t\t\t}\n\n\t\t\t});\n\t\t})\n\t\t.error(function(err){\n\t\t\tconsole.error(err);\n\t\t\tresponse.redirect('/404');\n\t\t});\n\n\t};\n\n\tfunction createModel(params){\n\t\tvar blogListData = params.feedData;\n\t\tvar data = params.templateData;\n\t\tvar firstItem = blogListData.shift();\n\t\tutils.setDates([firstItem], 'ArticleDate');\n\n\t\tvar model = {\n\t\t\tlayout: false,\n\t\t\tsiteTitle: data.metaData.siteTitle,\n\t\t\tsiteDescription: data.metaData.siteDescription,\n\t\t\tdata: data,\n\t\t\thelpers: website.settings.templateHelpers,\n\t\t\tblogContent: firstItem,\n\t\t\tcanonicalUrl: params.canonicalUrl\n\t\t}\n\t\treturn model;\n\t}\n\n};\n\nmodule.exports = function(website) {\n\tvar controller = new WebsiteController(website);\n\twebsite.get(['/','/:loc'], controller.get);\n\n};","redirect = require(\"express-redirect\");\n\nmodule.exports = function(website) {\n\n\tredirect(website);\n\n\twebsite.redirect(\"/approach*\", \"/\", 301);\n\twebsite.redirect(\"/services*\", \"/\", 301);\n\twebsite.redirect(\"/work*\", \"/\", 301);\n\twebsite.redirect(\"/contact*\", \"/\", 301);\n\twebsite.redirect(\"/privacy-policy*\", \"/\", 301);\n\twebsite.redirect(\"/terms-conditions*\", \"/\", 301);\n\twebsite.redirect(\"/blogs*\", \"/blog\", 301);\n};","var Promise = require('bluebird');\nvar fs = Promise.promisifyAll(require('fs'));\n\nvar WebsiteController = function (website) {\n\tthis.get = function(request, response) {\n\t\tresponse.header('Content-Type', 'application/xml');\n\n\t\tgetSitemap()\n\t\t\t.then(function(content) { \n\t\t\t\tresponse.send(content);\n\t\t\t})\n\t\t\t.error(function() { \n\t\t\t\tresponse.redirect('/404');\n\t\t\t});\n\t};\n\n\tfunction getSitemap() {\n\t\tvar sitemap = './public/_client/sitemap.xml';\n\t\treturn fs.readFileAsync(sitemap);\n\t}\n}\n\nmodule.exports = function(website) {\n\tvar controller = new WebsiteController(website);\n\twebsite.get('/sitemap.xml', controller.get);\n};","(function () {\n  'use strict';\n\tvar fs = require('fs');\n\n\tvar staticContentModel = require('../models/staticContent.js');\n\n\tvar WebsiteController = function (website) {\n\t\t// Public functions\n\t\tvar utils = require('../utils/common.js')();\n\n\t\tthis.get = function(request, response) {\n\t\t\tif (!request.body) {\n\t\t\t\treturn response.sendStatus(400);\n\t\t\t}\n\n\t\t\tvar content = new staticContentModel(website);\n\n\t\t\t//Asynchronous get data\n\t\t\tcontent.get().then(function(data){\n\t\t\t\tvar templateData = JSON.parse(String(data));\n\n\t\t\t\tresponse.render('styleguide', createModel({\n\t\t\t\t\ttemplateData: templateData,\n\t\t\t\t\tcanonicalUrl : utils.getCanonicalUrl(request)\n\t\t\t\t}));\n\t\t\t})\n\t\t\t.error(function(){\n\t\t\t\tresponse.redirect('/404');\n\t\t\t});\n\n\n\n\t\t\t//response.render('styleguide', createModel({canonicalUrl : utils.getCanonicalUrl(request)}));\n\t\t};\n\n\t\tfunction createModel(params){\n\t    var colArr = getFileContents(website.settings.sassColors);\n\n\t\t\tvar model = {\n\t\t\t\tlayout: false,\n\t\t\t\tdata: params.templateData,\n\t\t\t\thelpers: website.settings.templateHelpers,\n\t\t\t\tcolors: colArr,\n\t\t\t\tcanonicalUrl: params.canonicalUrl\n\t\t\t}\n\t\t\treturn model;\n\t\t}\n\n\t\tfunction getFileContents(file){\n\t\t\tvar colorItem;\n\t\t\tvar regHex = /#\\w+;/g;\n\t\t\tvar colArr = [];\n\n\t\t\tfile = fs.readFile(file, 'utf8', function (err,data) {\n\n\t\t\t\twhile (colorItem = regHex.exec(data)){\n\t\t\t\t\tvar color = colorItem[0].replace(';','');\n\t\t\t\t\tif(colArr.indexOf(color) === -1){ \n\t\t\t\t\t\tcolArr.push(color);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t});\n\n\t\t\treturn colArr;\n\t\t}\n\n\t};\n\n\tmodule.exports = function(website) {\n\t\tvar controller = new WebsiteController(website);\n\t\twebsite.get('/styleguide', controller.get);\n\n\t};\n}());\n","/*jshint expr: true, es5: true */\n\n(function () {\n    'use strict';\n    describe('As a test test', function() {\n\n        // Enables chai should syntax\n        //\n        // rather than assert.equals(valueOne, valueTwo)\n        //\n        // valueOne.should.equal(valueTwo);\n        chai.should();\n\n        // before('Runs before ANY tests have run', function(){\n\n        // });\n\n        // beforeEach('Runes before each individual test has run',function() {\n\n        // });\n\n        describe('When I test', function() {\n\n            it('should complete test, checking that true is equal to true', function() {\n                expect(true).to.be.true;\n            });\n\n        });\n\n        // afterEach('Runs after each individual test has run', function() {\n\n        // });\n\n        // after('Runs after ALL tests have run', function() {\n\n        // });\n\n    });\n}());\n","(function () {\n\t'use strict';\n\n\tvar fs = require('fs');\n\tvar rp = require('request-promise');\n\tvar path = require('path');\n\n\tmodule.exports = function(){\n\n\t\tvar utils = {}; \n\n\t\tutils.getApiData = function (filePath){\n\t\t\tvar file = fs.readFileAsync(filePath, 'utf8', function (err,data) {\n\t\t\t\t\tif(err){\n\t\t\t\t\t\treturn err;\n\t\t\t\t\t}\n\t\t\t\t\treturn data;\n\t\t\t\t});\n\t\t\treturn file;\n\t\t};\n\n\t\tutils.getApiServiceData = function(url){\n\t\t\treturn rp(url);\n\t\t};\n\n\t\tutils.saveFile = function(dir,content,name){\n\n\t\t\tif (!fs.existsSync(dir)){\n\t\t\t    fs.mkdirSync(dir);\n\t\t\t}\n\n\t\t\tvar filepath = path.join(dir, name);\n\n\t\t\treturn fs.writeFileAsync(filepath, JSON.stringify(content));\n\t\t};\n\n\t\tutils.parseUrl = function(url, page){\n\t\t\tif(url === '/' || url === '' || url === undefined || url === 'favicon.ico'){\n\t\t\t\t// this acts as the default view file when working locally\n\t\t\t\turl = page;\n\t\t\t}else {\n\t\t\t\turl = '404';\n\t\t\t}\n\t\t\treturn url;\n\t\t};\n\n\t\tutils.formatDateNum = function(str){\n\t\t\tstr = String(str);\n\t\t\treturn (str.length === 1) ? ('0' + str) : str;\n\t\t};\n\n\t\tutils.formatDate = function(isoString){\n\t\t\tvar d = new Date(isoString);\n\t\t\tvar day = String(d.getDay());\n\t\t\tvar month = String(d.getMonth());\n\t\t\tvar cDay = utils.formatDateNum(day);\n\t\t\tvar cMonth = utils.formatDateNum(parseInt(month)+1);\n\t\t\treturn cDay + '.' + cMonth + '.' + d.getFullYear();\n\t\t};\n\n\t\tutils.getSingleAuthor = function(arr){\n\t\t\treturn arr[0];\n\t\t};\n\n\t\tutils.setDates = function(listData,prop){\n\t\t\tfor (var i = 0; i < listData.length; i++){\n\t\t\t\tvar d = listData[i][prop];\n\t\t\t\tlistData[i].PublishedDate = utils.formatDate(d);\n\t\t\t\tlistData[i].ArticleDateFormatted = utils.formatDate(d);\n\t\t\t\tlistData[i].ArticleDate = new Date(d).toISOString();\n\t\t\t}\n\t\t};\n\n\t\tutils.getCanonicalUrl = function(request){\n\n\t\t\treturn request.protocol + '://' + request.get('host') + request.originalUrl.replace(/\\/$/, '');\n\t\t};\n\n\t\treturn utils;\n\t};\n}());\n\n","(function () {\n\t'use strict';\n\n\tmodule.exports = function(req, res, next) {\n\t    if(req.url.indexOf('/') === 0 || \n\t    \treq.url.indexOf('/_client/styles/') === 0 || \n\t    \treq.url.indexOf('/_client/images/') === 0 || \n\t    \treq.url.indexOf('/_client/fonts/') === 0) {\n\t        res.setHeader('Cache-Control', 'public, max-age=604800'); // 7 days\n\t        res.setHeader('Expires', new Date(Date.now() + 604800000).toUTCString());\n\t    }\n\n\t    return next();\n\t};\n}());","(function () {\n  'use strict';\n\n\tvar fs = require('fs'),\n\t\tpath = require('path'),\n\t\tPromise = require('bluebird');\n\n\tPromise.promisifyAll(fs);\n\n\tmodule.exports = function(fileName, fallbackUrl){\n\n\t\tvar utils = require('./common.js')();\n\n\t\tvar location = path.join(__dirname, '../_api-data/');\n\t\tvar filePath = path.join(location, fileName);\n\n\n\t\tif (fs.existsSync(filePath)){\n\t\t\treturn utils.getApiData(filePath).then(function(data){\n\t\t\t\treturn data;\n\t\t\t}).error(function(err){\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t\t}\n\n\t\treturn utils.getApiServiceData(fallbackUrl)\n\t\t\t\t.then(function(data){\n\t\t\t\t\t//save new data\n\t\t\t\t\tutils.saveFile(location, JSON.parse(data), fileName);\n\t\t\t\t\t\n\t\t\t\t\treturn data;\n\n\t\t\t\t})\n\t\t\t\t.error(function(err){\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t});\n\t};\n}());","(function () {\n  'use strict';\n\n\tvar fs = require('fs'),\n\tpath = require('path'),\n\tPromise = require('bluebird');\n\t\n\n\tPromise.promisifyAll(fs);\n\n\tmodule.exports = function(type, website){\n\t\tvar utils = require('./common.js')(website);\n\n\t\tvar newData;\n\t\tvar blogList;\n\t\tvar jobsList;\n\t\tvar jobArticle;\n\t\tvar blogArticle;\n\t\tvar fileName;\n\t\tvar apiConfig = utils.getApiData(website.settings.apiConfig);\n\n\t\tfunction doNothing(){\n\t\t\t\treturn new Promise(function(){\n\t\t\t\t\t// do nothing\n\t\t\t\t\tconsole.error('publish querystring value not handled: querystring = ' + String(type));\n\t\t\t\t});\n\t\t\t}\n\n\t\tapiConfig.then(function(apiPaths){\n\t\t\tapiPaths = JSON.parse(apiPaths);\n\t\t\tblogList = apiPaths.env + '/' + apiPaths.blog.getAllBlogs;\n\t\t\tjobsList = apiPaths.env + '/' + apiPaths.jobs.getAllJobs;\n\t\t\tjobArticle = apiPaths.env + '' + apiPaths.jobs.getJobByUrl + '?link=/jobs/' + String(type);\n\t\t\tblogArticle = apiPaths.env + '' + apiPaths.blog.getBlogByUrl + '?link=/blog/' + String(type);\n\n\t\t\tswitch(type){\n\t\t\t\tcase 'content':\n\t\t\t\t\t\t\tnewData = utils.getApiServiceData(website.settings.templateData);\n\t\t\t\t\t\t\tfileName = JSON.parse(website.settings.localJson).content;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\tcase\t'blog-list':\n\t\t\t\t\t\t\tnewData = utils.getApiServiceData(blogList);\n\t\t\t\t\t\t\tfileName = JSON.parse(website.settings.localJson).blog;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\tcase\t'job-list':\n\t\t\t\t\t\t\tnewData = utils.getApiServiceData(blogList);\n\t\t\t\t\t\t\tfileName = JSON.parse(website.settings.localJson).jobs;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\tdefault: newData = doNothing();\n\t\t\t\t\t\t\tbreak;\n\t\t\t}\t\t\n\n\t\t\tnewData.then(function(data){\n\t\t\t\t//replace existing file or add new one\n\n\t\t\t\tvar location = path.join(__dirname, '../_api-data/');\n\t\t\t\tfileName = fileName +'.json';\n\n\t\t\t\tutils.saveFile(location, JSON.parse(data), fileName);\n\n\t\t\t}).error(function(err){\n\t\t\t\tconsole.error(err);\n\t\t\t\t//do nothing.\n\t\t\t});\n\n\t\t});\n\n\t};\n}());","(function () {\n  'use strict';\n\n\tmodule.exports = function(req, res, next) {\n\t    if (req.path.substr(-1) === '/' && req.path.length > 1) {\n\t        var query = req.url.slice(req.path.length);\n\t        res.redirect(301, req.path.slice(0, -1) + query);\n\t    } else {\n\t        next();\n\t    }\n\t};\n}());\n","(function () {\n  'use strict';\n\n  var http = require('http');\n  var chai = require('chai');\n\n  function getRequest(url, assertion, done) {\n    http.get(url, function(res){\n      var body = '';\n      res.on('data', function(d){\n        body += d;\n      })\n      .on('end', function(){\n        assertion(body);\n        done();\n      });\n      \n    });\n  }\n\n  describe('as a dev I want to request an api service', function() {\n\n    chai.should();\n\n    var jsonObj;\n\n    describe('When I call the api for all blogs', function() {\n\n    \tvar url = 'http://code.website.2.web2008.dev/Umbraco/Api/BlogsApi/GetAllBlogs/';    \n\n    \tit('should return json data containing a list of published blogs', function(done){\n    \t\t\n    \t\tvar assertion = function(body) {\n  \t\t\t\tjsonObj = JSON.parse(body);\n  \t\t\t\tjsonObj.should.be.an('array');\n  \t\t\t};\n\n  \t\t\tgetRequest(url, assertion, done);\n    \t\t\n    \t});\n    \t\n    \tit('should include url data for each item', function(done){\n    \t\tvar assertion = function(body){\n    \t\t\tjsonObj = JSON.parse(body)[0];\n  \t\t\t\tjsonObj.should.have.property('Url');\n    \t\t};\n    \t\t\n    \t\tgetRequest(url, assertion, done);\n\n    \t});\n\n    });\n\n    describe('When I call the api for jobs', function() {\n\n    \tvar url = 'http://code.website.2.web2008.dev/Umbraco/Api/JobsApi/GetAllJobs/';\n\n    \tit('should return json data containing a list of published jobs', function(done) {\n  \t\t\tvar assertion = function(body) {\n  \t\t\t\tjsonObj = JSON.parse(body);\n  \t\t\t\tjsonObj.should.be.an('array');\n    \t\t};\n\n  \t\t\tgetRequest(url, assertion, done);\n    \t\n    \t});\t\n\n    \tit('should include job title data for each item', function(done){      \n    \t\tvar assertion = function(body){\n    \t\t\tjsonObj = JSON.parse(body)[0];\n    \t\t\tjsonObj.should.have.property('Title');\n    \t\t};\n\n    \t\tgetRequest(url, assertion, done);\n\n    \t});\n\n    });\n  });\n}());","(function(window, undefined){\n\t'use strict';\n\n\tvar Website = Website || {};\n\n\tWebsite = function(){\n\n\t\tfunction init(){\n\t\t\t\n\t\t}\n\n\t\tinit();\n\t};\n\n})(window);","//vendor file"],"sourceRoot":"/source/"}